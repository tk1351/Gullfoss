import {
  GetStaticPaths,
  GetStaticProps,
  InferGetStaticPropsType,
  NextPage,
} from 'next'
import Head from 'next/head'
import { client } from '../../api'
import BaseHeader from '../../components/organisms/BaseHeader/BaseHeader'
import BaseFooter from '../../components/organisms/BaseFooter/BaseFooter'
import SearchResultPage from '../../components/pages/SearchResultPage/SearchResultPage'
import { footerLinks, headerLinks } from '../../lib'

const query: NextPage<Props> = ({ posts, tags, query }) => {
  return (
    <div>
      <Head>
        <title>Gullfoss</title>
        <meta name='description' content='Generated by create next app' />
      </Head>
      <main>
        <BaseHeader links={headerLinks} />
        <SearchResultPage query={query} posts={posts} tags={tags} />
      </main>

      <BaseFooter links={footerLinks} />
    </div>
  )
}

export const getStaticPaths: GetStaticPaths = async () => {
  return {
    paths: [],
    fallback: 'blocking',
  }
}

export const getStaticProps: GetStaticProps = async (context) => {
  const query = context.params?.query
  const posts = await client.v1.posts.$get({
    query: { q: encodeURI(String(query)) },
  })
  const tags = await client.v1.tags.$get()

  return {
    props: { posts, tags, query },
    revalidate: 10,
  }
}

type Props = InferGetStaticPropsType<typeof getStaticProps>

export default query
